import express from "express";
import {
  // ðŸ”¹ Admin
  createAdminAssignment,
  getAdminHistory,

  // ðŸ”¹ Regional Manager
  getRegionalStock,
  allocateRegional,

  // ðŸ”¹ Branch Manager
  getBranchStock,
  createBranchAssignment,

  // ðŸ”¹ Manager
  getManagerStock,
  allocateManager,

  // ðŸ”¹ Common
  getEmployeeStock,
  submitToVendor,
  updateLRNo,
  getVendorList, // âœ… added here
} from "../controllers/assignmentController.js";

import { protect, adminOnly, vendorOnly } from "../middleware/authMiddleware.js";

const router = express.Router();

/* ------------------------------------------------------------------
 ðŸŸ¢ ADMIN ROUTES
------------------------------------------------------------------ */

// âœ… Admin creates new assignment
router.post("/admin", protect, adminOnly, createAdminAssignment);

// âœ… Admin fetches full history
router.get("/history/admin", protect, adminOnly, getAdminHistory);

/* ------------------------------------------------------------------
 ðŸ”µ REGIONAL MANAGER ROUTES
------------------------------------------------------------------ */

// âœ… RM stock fetch (RMâ€™s own assigned items)
router.get("/regional/stock", protect, getRegionalStock);

// âœ… RM allocates to BMs
router.post("/allocate/rm", protect, allocateRegional);

/* ------------------------------------------------------------------
 ðŸŸ£ BRANCH MANAGER ROUTES
------------------------------------------------------------------ */

// âœ… BM stock fetch
router.get("/branch/stock", protect, getBranchStock);

// âœ… BM allocates to Managers
router.post("/allocate/bm", protect, createBranchAssignment);

/* ------------------------------------------------------------------
 ðŸŸ  MANAGER ROUTES
------------------------------------------------------------------ */

// âœ… Manager stock fetch
router.get("/manager/stock", protect, getManagerStock);

// âœ… Manager allocates to Employees
router.post("/allocate/manager", protect, allocateManager);

/* ------------------------------------------------------------------
 ðŸŸ¡ EMPLOYEE ROUTE
------------------------------------------------------------------ */

// âœ… Employeeâ€™s stock and allocation history
router.get("/employee/:empCode", protect, getEmployeeStock);

/* ------------------------------------------------------------------
 ðŸ”´ VENDOR + DISPATCH ROUTES
------------------------------------------------------------------ */

// âœ… Submit any Project/Marketing assignment to Vendor
router.post("/dispatch/:rootId", protect, submitToVendor);

// âœ… LR Number update (by Admin or Vendor)
router.put("/vendor/lr/:rootId", protect, updateLRNo);

// âœ… Vendor view list (Project/Marketing + sent to vendor)
router.get("/vendor/list", protect, getVendorList);

export default router;
